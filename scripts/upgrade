#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

install_type=$(ynh_app_setting_get $app install_type)
encrypt=$(ynh_app_setting_get $app encrypt)
final_path=$(ynh_app_setting_get $app final_path)
ssh_host=$(ynh_app_setting_get $app ssh_host)
ssh_port=$(ynh_app_setting_get $app ssh_port)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# SPECIFIC UPGRADE
#=================================================

if [ "$install_type" == "main" ]
then
	#=================================================
	# CONFIG FOR THE MAIN SERVER
	#=================================================
	# MODIFY THE CONFIG
	#=================================================

	configfile="$final_path/send_process/config.conf"
	ynh_replace_string "ssh_user=.*" "ssh_user=$app" "$configfile"
	ynh_replace_string "ssh_host=.*" "ssh_host=$ssh_host" "$configfile"
	ynh_replace_string "ssh_port=.*" "ssh_port=$ssh_port" "$configfile"

	data_dir="/home/yunohost.app/$app/fallback_backup"
	ynh_replace_string "main_storage_dir=.*" "main_storage_dir=$data_dir" "$configfile"
	ynh_replace_string "encrypt=.*" "encrypt=$encrypt" "$configfile"

	#=================================================
	# UPDATE THE CRON
	#=================================================

	echo "0 1 * * * root \"$final_path/send_process/send_backup.sh\" > /dev/null" > /etc/cron.d/$app

else
	#=================================================
	# CONFIG FOR THE FALLBACK SERVER
	#=================================================
	# CREATE DEDICATED USER
	#=================================================

	if ! ynh_system_user_exists "$app"
	then
		useradd -d "/home/$app" --system --user-group $app --shell /bin/bash
	fi

	#=================================================
	# SET THE USER IN DEPLOY_FALLBACK SCRIPTS
	#=================================================

	ynh_replace_string "\(local_archive_dir=\"/home/\)USER" "\1$app" "$final_path/deploy_process/deploy_fallback.sh"
	ynh_replace_string "\(local_archive_dir=\"/home/\)USER" "\1$app" "$final_path/deploy_process/close_fallback.sh"

	#=================================================
	# UPDATE THE CHROOT FOR THE SSH USER
	#=================================================

	chroot_dir="/home/$app"

	# Create directories for the binaries
	mkdir -p $chroot_dir/{bin,lib,lib64}

	# Copy the ld-linux file, according to the architecture
	SUPPRESS_WARNING cp /lib/ld-linux.so.2 $chroot_dir/lib/ || true
	SUPPRESS_WARNING cp /lib64/ld-linux-x86-64.so.2 $chroot_dir/lib64/ || true
	SUPPRESS_WARNING cp /lib/ld-linux-armhf.so.3 $chroot_dir/lib/ || true

	# Update the locate database
	updatedb

	# Declare functions to find and copy the binaries.
	cp_which () {
		cp `which $1` $chroot_dir/bin/$1
	}
	locate_and_cp () {
		local path_of_file=$(locate $1 | grep -v /home/ | head -n1)
		cp $path_of_file $chroot_dir/lib/
	}

	# Copy bash in the chroot
	cp_which bash
	locate_and_cp libncurses.so.5
	locate_and_cp libtinfo.so.5
	locate_and_cp libdl.so.2
	locate_and_cp libc.so.6

	# Then rsync
	cp_which rsync
	locate_and_cp libattr.so.1
	locate_and_cp libacl.so.1
	locate_and_cp libpopt.so.0

	# Create the directory for rsync
	mkdir -p $chroot_dir/backup

	# The parent directory shall belong to root
	chown $app: -R "$chroot_dir"
	chown root: "$chroot_dir"

	# Update the ssh config
	if ! grep "# Automatically added by $app" /etc/ssh/sshd_config
	then
		echo "
		Match User $app # Automatically added by $app
		ChrootDirectory /home/%u # Automatically added by $app
		AllowTcpForwarding no # Automatically added by $app
		X11Forwarding no # Automatically added by $app" >> /etc/ssh/sshd_config

		# Reload ssh service
		systemctl reload ssh
	fi
fi

#=================================================
# UPDATE LINKS FOR THE ADMIN USER
#=================================================

if [ "$install_type" == "main" ]; then
	ln -sf "$final_path/send_process/app_list" "/home/yunohost.app/$app/app_list"
	ln -sf "$final_path/send_process/config.conf" "/home/yunohost.app/$app/config.conf"
	ln -sf "$final_path/update_from_fallback_process/update_from_fallback.sh" "/home/yunohost.app/$app/update_from_fallback"
else
	ln -sf "$final_path/deploy_process/deploy_fallback.sh" "/home/yunohost.app/$app/deploy_fallback"
	ln -sf "$final_path/deploy_process/close_fallback.sh" "/home/yunohost.app/$app/close_fallback"
fi

#=================================================
# CONFIGURE HOOKS
#=================================================

ynh_replace_string "__FINALPATH__" "$final_path" "../hooks/post_app_install"
ynh_replace_string "__FINALPATH__" "$final_path" "../hooks/post_app_remove"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R root: $final_path

if [ "$install_type" == "main" ]
then
	#=================================================
	# SETUP LOGROTATE
	#=================================================

	# Use logrotate to manage application logfile(s)
	ynh_use_logrotate --non-append
fi
