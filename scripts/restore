#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --weight=3

app=$YNH_APP_INSTANCE_NAME

install_type=$(ynh_app_setting_get --app=$app --key=install_type)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
ssh_host=$(ynh_app_setting_get --app=$app --key=ssh_host)
ssh_port=$(ynh_app_setting_get --app=$app --key=ssh_port)
pub_key="$(ynh_app_setting_get --app=$app --key=pub_key)"
auto_detect_failure=$(ynh_app_setting_get --app=$app --key=auto_detect_failure)
datadir=$(ynh_app_setting_get --app=$app --key=datadir)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..."

test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..."

ynh_restore_file --origin_path="$final_path"

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..." --weight=9

# Define and install dependencies
ynh_install_app_dependencies $pkg_dependencies

if [ "$install_type" == "main" ]
then

	#=================================================
	# ADD THE HOST TO THE KNOWN HOST LIST
	#=================================================
	ynh_script_progression --message="Adding the host to the known host list..." --weight=3

	mkdir -p /root/.ssh
	ssh-keyscan -t rsa $ssh_host >> /root/.ssh/known_hosts 2> /dev/null

	#=================================================
	# RESTORE THE LOGROTATE CONFIGURATION
	#=================================================

	ynh_restore_file --origin_path="/etc/logrotate.d/$app"

	#=================================================
	# RESTORE THE CRON FILE
	#=================================================

	ynh_restore_file --origin_path="/etc/cron.d/$app"

else
	#=================================================
	# RECREATE DEDICATED USER
	#=================================================

	if ! ynh_system_user_exists --username=$app
	then
		ynh_script_progression --message="Recreating the dedicated system user..."
		useradd -d "/home/$app" --system --user-group $app --shell /bin/bash
	fi

	# Allow the user to use ssh
	adduser $app ssh.app

	#=================================================
	# RESTORE USER DIRECTORIES
	#=================================================
	ynh_script_progression --message="Restoring user directories..." --weight=2

	ynh_restore_file --origin_path="/home/$app/bin"
	ynh_restore_file --origin_path="/home/$app/lib"
	ynh_restore_file --origin_path="/home/$app/lib64"
	ynh_restore_file --origin_path="/home/$app/.ssh"

	# Update the ssh config
	if ! grep "# Automatically added by $app" /etc/ssh/sshd_config
	then
		ynh_script_progression --message="Update the ssh config"

		echo "
		Match User $app # Automatically added by $app
		ChrootDirectory /home/%u # Automatically added by $app
		AllowTcpForwarding no # Automatically added by $app
		X11Forwarding no # Automatically added by $app" >> /etc/ssh/sshd_config

		# Reload ssh service
		ynh_systemd_action --action=reload --service_name=ssh
	fi

	#=================================================
	# RESTORE THE CRON FILE
	#=================================================

	if [ $auto_detect_failure -eq 1 ]
	then
		ynh_restore_file --origin_path="/etc/cron.d/auto_deploy_fallback"
	fi
fi

#=================================================
# RECREATE DIRECTORIES
#=================================================

mkdir -p "$datadir/fallback_backup/backup"
if [ "$install_type" == "main" ]
then
	mkdir -p /var/log/$app
else
	mkdir -p /home/$app/backup
fi

#=================================================
# SET LINKS FOR THE ADMIN USER
#=================================================

if [ "$install_type" == "main" ]; then
	ln -sf "$final_path/send_process/app_list" "$datadir/app_list"
	ln -sf "$final_path/send_process/config.conf" "$datadir/config.conf"
	ln -sf "$final_path/update_from_fallback_process/update_from_fallback.sh" "$datadir/update_from_fallback"
else
	ln -sf "$final_path/deploy_process/deploy_fallback.sh" "$datadir/deploy_fallback"
	ln -sf "$final_path/deploy_process/close_fallback.sh" "$datadir/close_fallback"
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

if [ "$install_type" == "fallback" ]
then
	# The parent directory shall belong to root
	chown $app: -R "/home/$app"
	chown root: "/home/$app"
	chmod 755 -R "/home/$app"
	# Set the permissions for the ssh key
	chmod 644 "$chroot_dir/.ssh/authorized_keys"
fi

#=================================================
# SEND A README FOR THE ADMIN
#=================================================

# Get main domain and buid the url of the admin panel of the app.
admin_panel="https://$(grep portal_domain /etc/ssowat/conf.json | cut -d'"' -f4)/yunohost/admin/#/apps/$app"

if [ "$install_type" == "main" ]
then
	Informations="By default, no apps will be backuped for your fallback server. To select which apps you want to backup, please have a look at the app_list file in $datadir/app_list.

Please take note of your public ssh key. This will be usefull during the installation on your fallback server :
$pub_key

Fallback is going to backup and send its backup every night.
If you want to change the frequency, have a look to the file /etc/cron.d/$app.

You can also find a config file at /home/yunohost.app/fallback/config.conf"
else
	domain=$(yunohost domain list | grep -m1 "-" | awk '{print $2}')
	if [ -n "$domain" ]
	then
		domain="$domain or "
	else
		domain=""
	fi
	Informations="This server is now your fallback, you should keep this server only for this purpose.

Credentials for the ssh connexion from the other part of this app:
- ssh_host: $domain$(hostname)
- ssh_user: $app
- ssh_port: $(grep "^Port " /etc/ssh/sshd_config | awk '{print $2}')"

	if [ $auto_detect_failure -eq 1 ]
	then
		Informations="$Informations

Failure auto detection is activated on this fallback. In case of failure of your main server.
To modify the configuration related to this option, please have a look at $final_path/deploy_process/auto_check.conf"
	fi
fi

echo "$Informations

For more information about how to use this app, please read the __URL_TAG1__readme__URL_TAG2__https://github.com/YunoHost-Apps/fallback_ynh/blob/master/README.md#how-it-works__URL_TAG3__.

You can configure this app easily by using the experimental __URL_TAG1__config-panel feature__URL_TAG2__$admin_panel/config-panel__URL_TAG3__.
You can also find some specific actions for this app by using the experimental __URL_TAG1__action feature__URL_TAG2__$admin_panel/actions__URL_TAG3__.

If you're facing an issue or want to improve this app, please open a new issue in this __URL_TAG1__project__URL_TAG2__https://github.com/YunoHost-Apps/fallback_ynh__URL_TAG3__." > mail_to_send

ynh_send_readme_to_admin --app_message="mail_to_send" --recipients="root" --type=restore

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
